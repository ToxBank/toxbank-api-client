#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	// net.toxbank.client.resource.UserClient
	c513 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UserClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> UserClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + UserClient() </td></tr>
			<tr><td align="left"> + UserClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> # createPOSTEntity(user : User, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> # createPUTEntity(user : User, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> + download(identifier : URL) : User </td></tr>
			<tr><td align="left"> + list(server : URL) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listProtocols(user : User) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + getProtocols(user : User) : List&lt;Protocol&gt; </td></tr>
			<tr><td align="left"> + getProjects(user : User) : List&lt;Project&gt; </td></tr>
			<tr><td align="left"> + getOrganisaitons(user : User) : List&lt;Organisation&gt; </td></tr>
			<tr><td align="left"> + listStudies(user : User) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listAlerts(user : User) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + getAlerts(user : User) : List&lt;Alert&lt;&gt;&gt; </td></tr>
			<tr><td align="left"> + addAlert(user : User, alert : Alert&lt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + myAccount(serverURL : URL) : User </td></tr>
			<tr><td align="left"> + addProject(user : User, project : Project) : RemoteTask </td></tr>
			<tr><td align="left"> + addOrganisation(user : User, org : Organisation) : RemoteTask </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.SearchClient
	c516 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SearchClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> SearchClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + SearchClient() </td></tr>
			<tr><td align="left"> + SearchClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> + searchURI(url : URL, query : String) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> # createPOSTEntity(object : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> # createPUTEntity(object : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.ProtocolClient
	c517 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProtocolClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> ProtocolClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + ProtocolClient() </td></tr>
			<tr><td align="left"> + ProtocolClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> # createPOSTEntity(protocol : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> # createPublishFlagOnly(isPublished : boolean) : HttpEntity </td></tr>
			<tr><td align="left"> # createPUTEntity(protocol : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> + uploadTemplate(protocol : Protocol, template : File) : RemoteTask </td></tr>
			<tr><td align="left"> + createNewVersion(protocol : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + createNewVersion(protocol : Protocol) : RemoteTask </td></tr>
			<tr><td align="left"> + download(identifier : URL) : Protocol </td></tr>
			<tr><td align="left"> + listProtocols(server : URL) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listProtocols(server : URL, params : String[]) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listProtocols(user : User) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + getProtocols(user : User) : List&lt;Protocol&gt; </td></tr>
			<tr><td align="left"> + upload(protocol : Protocol, server : URL, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : URL </td></tr>
			<tr><td align="left"> + upload(protocol : Protocol, server : URL) : URL </td></tr>
			<tr><td align="left"> + uploadAsync(protocol : Protocol, server : URL, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + publishAsync(protocol : Protocol, isPublished : boolean) : RemoteTask </td></tr>
			<tr><td align="left"> + update(protocol : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : URL </td></tr>
			<tr><td align="left"> + update(protocol : Protocol) : URL </td></tr>
			<tr><td align="left"> + updateAsync(protocol : Protocol, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + listFile(protocol : Protocol) : URL </td></tr>
			<tr><td align="left"> + downloadFile(protocol : Protocol) : File </td></tr>
			<tr><td align="left"> + downloadTemplate(protocol : Protocol) : File </td></tr>
			<tr><td align="left"> + listVersions(protocol : Protocol) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + getVersions(protocol : Protocol) : List&lt;Protocol&gt; </td></tr>
			<tr><td align="left"> + listPreviousVersion(protocol : Protocol) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + getPreviousVersion(protocol : Protocol) : List&lt;Protocol&gt; </td></tr>
			<tr><td align="left"> + listTemplate(protocol : Protocol) : URL </td></tr>
			<tr><td align="left"> + getTemplates(protocol : Protocol) : List&lt;Template&gt; </td></tr>
			<tr><td align="left"> + deleteProtocol(protocol : Protocol) </td></tr>
			<tr><td align="left"> + getModifiedSinceRDF_XML(url : URL, unixtimestamp : Long) : List&lt;Protocol&gt; </td></tr>
			<tr><td align="left"> + getModifiedSinceRDF_N3(url : URL, unixtimestamp : Long) : List&lt;Protocol&gt; </td></tr>
			<tr><td align="left"> + getModifiedSinceURI(url : URL, unixtimestamp : Long) : List&lt;URL&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.AlertClient
	c523 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AlertClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> AlertClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + AlertClient() </td></tr>
			<tr><td align="left"> + AlertClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> + listAlerts(server : URL) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listAlerts(server : URL, params : String[]) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listAlerts(user : User) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + getAlerts(user : User) : List&lt;Alert&lt;&gt;&gt; </td></tr>
			<tr><td align="left"> # createPOSTEntity(object : Alert&lt;&gt;, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> # createPUTEntity(object : Alert&lt;&gt;, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.AbstractGroupClient<PO extends net.toxbank.client.resource.Group>
	c526 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractGroupClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="ariali"> AbstractGroupClient&lt;PO extends Group&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + AbstractGroupClient() </td></tr>
			<tr><td align="left"> + AbstractGroupClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> # createPOSTEntity(object : PO, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> # createPUTEntity(object : PO, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.AbstractClient<T extends net.toxbank.client.resource.IToxBankResource>
	c528 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="ariali"> AbstractClient&lt;T extends IToxBankResource&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + utf8 : Charset </td></tr>
			<tr><td align="left"> # mime_rdfxml : String </td></tr>
			<tr><td align="left"> # mime_n3 : String </td></tr>
			<tr><td align="left"> # search_param : String </td></tr>
			<tr><td align="left"> # modified_param : String </td></tr>
			<tr><td align="left"> # httpClient : HttpClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + AbstractClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> + AbstractClient() </td></tr>
			<tr><td align="left"> + getHttpClient() : HttpClient </td></tr>
			<tr><td align="left"> + setHttpClient(httpClient : HttpClient) </td></tr>
			<tr><td align="left"> + get(url : URL) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> + getRDF_XML(url : URL) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> + searchRDF_XML(url : URL, query : String) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # getRDF_N3(url : URL) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # searchRDF_N3(url : URL, query : String) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # get(url : URL, mediaType : String) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # get(url : URL, mediaType : String, params : String[]) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> + listURI(url : URL) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + searchURI(url : URL, query : String) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listURI(url : URL, params : String[]) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> # readURI(in : InputStream) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + postAsync(object : T, collection : URL, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + postAsync(object : T, collection : URL) : RemoteTask </td></tr>
			<tr><td align="left"> + putAsync(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + putAsync(object : T) : RemoteTask </td></tr>
			<tr><td align="left"> # deleteAsync(object : T) : RemoteTask </td></tr>
			<tr><td align="left"> # deleteAsync(url : URL) : RemoteTask </td></tr>
			<tr><td align="left"> # sendAsync(target : URL, entity : HttpEntity, method : String) : RemoteTask </td></tr>
			<tr><td align="left"><font face="ariali" point-size="10.0"> # createPOSTEntity(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </font></td></tr>
			<tr><td align="left"><font face="ariali" point-size="10.0"> # createPUTEntity(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </font></td></tr>
			<tr><td align="left"> + post(object : T, collection : URL, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : T </td></tr>
			<tr><td align="left"> + post(object : T, collection : URL) : T </td></tr>
			<tr><td align="left"> + put(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : T </td></tr>
			<tr><td align="left"> + delete(url : URL) </td></tr>
			<tr><td align="left"> + delete(object : T) </td></tr>
			<tr><td align="left"> + login(username : String, password : String) : OpenSSOToken </td></tr>
			<tr><td align="left"> + addPolicyRules(entity : MultipartEntity, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//net.toxbank.client.resource.UserClient extends net.toxbank.client.resource.AbstractClient<net.toxbank.client.resource.User>
	c528:p -> c513:p [dir=back,arrowtail=empty];
	//net.toxbank.client.resource.SearchClient extends net.toxbank.client.resource.AbstractClient<net.toxbank.client.resource.Protocol>
	c528:p -> c516:p [dir=back,arrowtail=empty];
	//net.toxbank.client.resource.ProtocolClient extends net.toxbank.client.resource.AbstractClient<net.toxbank.client.resource.Protocol>
	c528:p -> c517:p [dir=back,arrowtail=empty];
	//net.toxbank.client.resource.AlertClient extends net.toxbank.client.resource.AbstractClient<net.toxbank.client.resource.Alert>
	c528:p -> c523:p [dir=back,arrowtail=empty];
	//net.toxbank.client.resource.AbstractGroupClient<PO extends net.toxbank.client.resource.Group> extends net.toxbank.client.resource.AbstractClient<PO>
	c528:p -> c526:p [dir=back,arrowtail=empty];
}

