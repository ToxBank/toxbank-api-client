#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	// net.toxbank.client.resource.ProjectClient
	c477 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProjectClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> ProjectClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + ProjectClient() </td></tr>
			<tr><td align="left"> + ProjectClient(httpclient : HttpClient) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.OrganisationClient
	c478 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OrganisationClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> OrganisationClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + OrganisationClient() </td></tr>
			<tr><td align="left"> + OrganisationClient(httpclient : HttpClient) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.AbstractGroupClient<PO extends net.toxbank.client.resource.Group>
	c484 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractGroupClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="ariali"> AbstractGroupClient&lt;PO extends Group&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + AbstractGroupClient() </td></tr>
			<tr><td align="left"> + AbstractGroupClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> # createPOSTEntity(object : PO, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
			<tr><td align="left"> # createPUTEntity(object : PO, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// net.toxbank.client.resource.AbstractClient<T extends net.toxbank.client.resource.IToxBankResource>
	c486 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractClient.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="ariali"> AbstractClient&lt;T extends IToxBankResource&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + utf8 : Charset </td></tr>
			<tr><td align="left"> # mime_rdfxml : String </td></tr>
			<tr><td align="left"> # mime_n3 : String </td></tr>
			<tr><td align="left"> # search_param : String </td></tr>
			<tr><td align="left"> # modified_param : String </td></tr>
			<tr><td align="left"> # httpClient : HttpClient </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + AbstractClient(httpclient : HttpClient) </td></tr>
			<tr><td align="left"> + AbstractClient() </td></tr>
			<tr><td align="left"> + getHttpClient() : HttpClient </td></tr>
			<tr><td align="left"> + setHttpClient(httpClient : HttpClient) </td></tr>
			<tr><td align="left"> + get(url : URL) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> + getRDF_XML(url : URL) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> + searchRDF_XML(url : URL, query : String) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # getRDF_N3(url : URL) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # searchRDF_N3(url : URL, query : String) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # get(url : URL, mediaType : String) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> # get(url : URL, mediaType : String, params : String[]) : List&lt;T&gt; </td></tr>
			<tr><td align="left"> + listURI(url : URL) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + searchURI(url : URL, query : String) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + listURI(url : URL, params : String[]) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> # readURI(in : InputStream) : List&lt;URL&gt; </td></tr>
			<tr><td align="left"> + postAsync(object : T, collection : URL, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + postAsync(object : T, collection : URL) : RemoteTask </td></tr>
			<tr><td align="left"> + putAsync(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : RemoteTask </td></tr>
			<tr><td align="left"> + putAsync(object : T) : RemoteTask </td></tr>
			<tr><td align="left"> # deleteAsync(object : T) : RemoteTask </td></tr>
			<tr><td align="left"> # deleteAsync(url : URL) : RemoteTask </td></tr>
			<tr><td align="left"> # sendAsync(target : URL, entity : HttpEntity, method : String) : RemoteTask </td></tr>
			<tr><td align="left"><font face="ariali" point-size="10.0"> # createPOSTEntity(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </font></td></tr>
			<tr><td align="left"><font face="ariali" point-size="10.0"> # createPUTEntity(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : HttpEntity </font></td></tr>
			<tr><td align="left"> + post(object : T, collection : URL, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : T </td></tr>
			<tr><td align="left"> + post(object : T, collection : URL) : T </td></tr>
			<tr><td align="left"> + put(object : T, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) : T </td></tr>
			<tr><td align="left"> + delete(url : URL) </td></tr>
			<tr><td align="left"> + delete(object : T) </td></tr>
			<tr><td align="left"> + login(username : String, password : String) : OpenSSOToken </td></tr>
			<tr><td align="left"> + addPolicyRules(entity : MultipartEntity, accessRights : List&lt;PolicyRule&lt;&gt;&gt;) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//net.toxbank.client.resource.ProjectClient extends net.toxbank.client.resource.AbstractGroupClient<net.toxbank.client.resource.Project>
	c484:p -> c477:p [dir=back,arrowtail=empty];
	//net.toxbank.client.resource.OrganisationClient extends net.toxbank.client.resource.AbstractGroupClient<net.toxbank.client.resource.Organisation>
	c484:p -> c478:p [dir=back,arrowtail=empty];
	//net.toxbank.client.resource.AbstractGroupClient<PO extends net.toxbank.client.resource.Group> extends net.toxbank.client.resource.AbstractClient<PO>
	c486:p -> c484:p [dir=back,arrowtail=empty];
}

